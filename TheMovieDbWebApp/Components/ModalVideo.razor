@inject IApiService ApiService

<!-- Button to trigger the modal -->
@*symbol ! :  compiler to assume that the Movie property will never be null, even if the type of Movie allows null values.*@
<button type="button" class="far fa-play-circle nav-link" data-toggle="modal" data-target="#videoModal" @onclick="@(e => OnClickGetMovie(Movie!.Id))"></button>


<!-- The modal -->
<div class="modal fade" id="videoModal" tabindex="-1" aria-labelledby="videoModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                @HeaderContent
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="StopVideo">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @BodyContent
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Movie? Movie { get; set; }
    [Parameter]
    public RenderFragment? HeaderContent { get; set; }
    [Parameter]
    public RenderFragment? BodyContent { get; set; }
    [Parameter]
    public EventCallback<int> ClickGetMovie { get; set; } 

    private async Task OnClickGetMovie(int id)
    {
        await ClickGetMovie.InvokeAsync(id);
    }
    private async Task StopVideo()
    {
        await ClickGetMovie.InvokeAsync(0);
    }



}
